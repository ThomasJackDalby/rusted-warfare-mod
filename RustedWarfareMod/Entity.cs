namespace RustedWarfareMod;

public class Entity
{
	public ActionSection Action { get; } = new();
	public AnimationSection Animation { get; } = new();
	public ArmSection Arm { get; } = new();
	public AttachmentSection Attachment { get; } = new();
	public CanBuildSection CanBuild { get; } = new();
	public DecalSection Decal { get; } = new();
	public EffectSection Effect { get; } = new();
	public HiddenActionSection HiddenAction { get; } = new();
	public LegSection Leg { get; } = new();
	public PlacementRuleSection PlacementRule { get; } = new();
	public ProjectileSection Projectile { get; } = new();
	public ResourceSection Resource { get; } = new();
	public TemplateSection Template { get; } = new();
	public TurretSection Turret { get; } = new();
	public AiSection Ai { get; } = new();
	public AttackSection Attack { get; } = new();
	public CoreSection Core { get; } = new();
	public GraphicsSection Graphics { get; } = new();
	public HiddeAction_PassiveHealingSection HiddeAction_PassiveHealing { get; } = new();
	public MovementSection Movement { get; } = new();
}
public class ActionSection
{
	public string AddActionCooldownTime { get; set; }
	public int AddEnergy { get; set; }
	public string AddGlobalTeamTags { get; set; }
	public string AddResources { get; set; }
	public string AddResourcesScaledByAIHandicaps { get; set; }
	public string AddResourcesWithLogic { get; set; }
	public string AddWaypoint_maxTime { get; set; }
	public double AddWaypoint_position_randomOffsetFromSelf { get; set; }
	public bool AddWaypoint_prepend { get; set; }
	public bool AddWaypoint_target_mapMustBeReachable { get; set; }
	public string AddWaypoint_target_nearestUnit_tagged { get; set; }
	public string AddWaypoint_target_nearestUnit_team { get; set; }
	public string AddWaypoint_triggerActionIfFailed { get; set; }
	public string AddWaypoint_type { get; set; }
	public string Ai_considerSameAsBuilding { get; set; }
	public string Ai_isDisabled { get; set; }
	public string Ai_isHighPriority { get; set; }
	public string AiUse { get; set; }
	public bool AllowMultipleInQueue { get; set; }
	public string AlsoQueueAction { get; set; }
	public string AlsoTriggerAction { get; set; }
	public string AlsoTriggerOrQueueActionConditional { get; set; }
	public bool AlwaysSinglePress { get; set; }
	public string AutoTrigger { get; set; }
	public string AutoTriggerOnEvent { get; set; }
	public string BuildSpeed { get; set; }
	public bool BuildSpeed_ignoreFactorySpeedModifiers { get; set; }
	public bool CanPlayerCancel { get; set; }
	public bool ClearActiveWaypoint { get; set; }
	public bool ClearAllWaypoints { get; set; }
	public string ConvertTo { get; set; }
	public string ConvertTo_keepCurrentFields { get; set; }
	public string DebugMessage { get; set; }
	public bool DeleteSelf { get; set; }
	public string Description { get; set; }
	public string Description_es { get; set; }
	public string DescriptionAddFromUnit { get; set; }
	public string DescriptionAddUnitStats { get; set; }
	public bool DisconnectFromParent { get; set; }
	public bool DisplayRemainingStockpile { get; set; }
	public string DisplayType { get; set; }
	public bool ExtraLagHidingInUI { get; set; }
	public string FireTurretXAtGround { get; set; }
	public int FireTurretXAtGround_count { get; set; }
	public string FireTurretXAtGround_onlyOverPassableTileOf { get; set; }
	public string FireTurretXAtGround_showGuideDecals { get; set; }
	public string FireTurretXAtGround_withOffset { get; set; }
	public string FireTurretXAtGround_withProjectile { get; set; }
	public bool ForceUnloadTransportNow { get; set; }
	public bool HighPriorityQueue { get; set; }
	public object IconExtraColor { get; set; }
	public string IconExtraImage { get; set; }
	public string IconExtraIsVisible { get; set; }
	public string IconImage { get; set; }
	public string Id { get; set; }
	public string IsActive { get; set; }
	public bool IsAlsoViewableByAllies { get; set; }
	public bool IsAlsoViewableByEnemies { get; set; }
	public string IsGuiBlinking { get; set; }
	public string IsLocked { get; set; }
	public string IsLockedAlt { get; set; }
	public string IsLockedAlt2 { get; set; }
	public string IsLockedAlt2Message { get; set; }
	public string IsLockedAlt2Message_es { get; set; }
	public string IsLockedAltMessage { get; set; }
	public string IsLockedAltMessage_es { get; set; }
	public string IsLockedMessage { get; set; }
	public string IsLockedMessage_es { get; set; }
	public string IsVisible { get; set; }
	public bool OnlyOneUnitAtATime { get; set; }
	public string PlayAnimation { get; set; }
	public string PlaySoundAtUnit { get; set; }
	public string PlaySoundGlobally { get; set; }
	public object PlaySoundToPlayer { get; set; }
	public object PlaySoundToPlayerOnQueue { get; set; }
	public double Pos { get; set; }
	public string Price { get; set; }
	public string ProduceUnits { get; set; }
	public bool ResetCustomTimer { get; set; }
	public string ResourceAmount { get; set; }
	public string ResourceAmount_setValue { get; set; }
	public string SendMessageTo { get; set; }
	public string SendMessageWithData { get; set; }
	public string SendMessageWithTags { get; set; }
	public object SetUnitStats { get; set; }
	public object ShowMessageToAllPlayers { get; set; }
	public string SpawnEffects { get; set; }
	public object SpawnEffectsOnQueue { get; set; }
	public string SpawnUnits { get; set; }
	public bool StopLastAnimation { get; set; }
	public string Tags { get; set; }
	public string TemporarilyAddTags { get; set; }
	public string Text { get; set; }
	public string Text_es { get; set; }
	public string TextAddUnitName { get; set; }
	public string TextPostFix { get; set; }
	public string UnitShownInUI { get; set; }
	public bool WhenBuilding_cannotMove { get; set; }
	public string WhenBuilding_playAnimation { get; set; }
	public int WhenBuilding_rotateTo { get; set; }
	public bool WhenBuilding_rotateTo_orBackwards { get; set; }
	public string WhenBuilding_temporarilyConvertTo { get; set; }
	public string WhenBuilding_temporarilyConvertTo_keepFields { get; set; }
}
public class AnimationSection
{

}
public class ArmSection
{
	public int Attach_x { get; set; }
	public int Attach_y { get; set; }
	public int CopyFrom { get; set; }
	public int DrawDirOffset { get; set; }
	public bool DrawLegWhenZoomedOut { get; set; }
	public bool DrawOverBody { get; set; }
	public bool DrawUnderAllUnits { get; set; }
	public int EndDirOffset { get; set; }
	public double HeightSpeed { get; set; }
	public string Hidden { get; set; }
	public string Image_end { get; set; }
	public object Image_end_shadow { get; set; }
	public bool Image_end_teamColors { get; set; }
	public string Image_foot { get; set; }
	public string Image_middle { get; set; }
	public bool LockMovement { get; set; }
	public double MoveSpeed { get; set; }
	public int ResetAngle { get; set; }
	public int RotateSpeed { get; set; }
	public double SpinRate { get; set; }
	public double X { get; set; }
	public double Y { get; set; }
}
public class AttachmentSection
{
	public bool AddTransportedUnits { get; set; }
	public bool CanAttack { get; set; }
	public bool CanBeAttackedAndDamaged { get; set; }
	public bool CreateIncompleteIfParentIs { get; set; }
	public bool DeattachIfWantingToMove { get; set; }
	public int Height { get; set; }
	public int IdleDir { get; set; }
	public int IdleDirReversing { get; set; }
	public bool IsUnselectable { get; set; }
	public bool IsVisible { get; set; }
	public bool KeepAliveWhenParentDies { get; set; }
	public bool LockLegMovement { get; set; }
	public string LockRotation { get; set; }
	public string OnCreateSpawnUnitOf { get; set; }
	public bool OnParentTeamChangeKeepCurrentTeam { get; set; }
	public bool PrioritizeParentsMainTarget { get; set; }
	public bool RedirectDamageToParent { get; set; }
	public bool RedirectDamageToParent_shieldOnly { get; set; }
	public bool ResetRotationWhenNotAttacking { get; set; }
	public bool RotateWithParent { get; set; }
	public bool SetDrawLayerOnBottom { get; set; }
	public bool SetDrawLayerOnTop { get; set; }
	public string ShowAllActionsFrom { get; set; }
	public bool SmoothlyBlendPositionWhenExistingUnitAdded { get; set; }
	public bool UnloadInCurrentPosition { get; set; }
	public double X { get; set; }
	public double Y { get; set; }
}
public class CanBuildSection
{
	public string AddResources { get; set; }
	public bool ExtraLagHidingInUI { get; set; }
	public bool ForceNano { get; set; }
	public string IsLocked { get; set; }
	public string IsLockedAlt { get; set; }
	public string IsLockedAltMessage { get; set; }
	public string IsLockedAltMessage_es { get; set; }
	public string IsLockedMessage { get; set; }
	public string IsLockedMessage_es { get; set; }
	public string IsVisible { get; set; }
	public string Name { get; set; }
	public double Pos { get; set; }
	public string Price { get; set; }
	public int Tech { get; set; }
}
public class DecalSection
{
	public string Alpha { get; set; }
	public bool AlwaysStartDirAtZero { get; set; }
	public string BasePosition { get; set; }
	public string BasePositionFromLegEnd { get; set; }
	public int BasePositionFromTurret { get; set; }
	public object Color { get; set; }
	public string Frame { get; set; }
	public int Frame_height { get; set; }
	public int Frame_width { get; set; }
	public string Image { get; set; }
	public string ImageScale { get; set; }
	public bool IncludeParentsSelection { get; set; }
	public string IsVisible { get; set; }
	public string Layer { get; set; }
	public bool OnlyInPreview { get; set; }
	public bool OnlyOnNonPreview { get; set; }
	public bool OnlyPlayersWithUnitControl { get; set; }
	public string OnlyTeam { get; set; }
	public bool OnlyWhenSelectedByAnyPlayer { get; set; }
	public bool OnlyWhileActive { get; set; }
	public bool OnlyWhileAlive { get; set; }
	public double OnlyWithZoomLevelOrMore { get; set; }
	public int Order { get; set; }
	public bool TeamColors { get; set; }
	public int XOffsetRelative { get; set; }
	public int YOffsetAbsolute { get; set; }
	public double YOffsetRelative { get; set; }
}
public class EffectSection
{
	public double Alpha { get; set; }
	public object AlsoEmitEffects { get; set; }
	public string AlsoPlaySound { get; set; }
	public bool AlwayStartDirAtZero { get; set; }
	public int AnimateFrameEnd { get; set; }
	public bool AnimateFramePingPong { get; set; }
	public double AnimateFrameSpeed { get; set; }
	public double AnimateFrameSpeedRandom { get; set; }
	public int AnimateFrameStart { get; set; }
	public int AnimateFrameStartRandomAdd { get; set; }
	public bool Atmospheric { get; set; }
	public bool AttachedToUnit { get; set; }
	public string Color { get; set; }
	public bool CreateWhenOffscreen { get; set; }
	public bool CreateWhenOverLand { get; set; }
	public bool CreateWhenOverLiquid { get; set; }
	public bool CreateWhenZoomedOut { get; set; }
	public double DelayedStartTimer { get; set; }
	public int DelayedStartTimerRandom { get; set; }
	public int DirOffset { get; set; }
	public int DirOffsetRandom { get; set; }
	public double DirSpeed { get; set; }
	public double DirSpeedRandom { get; set; }
	public string DrawType { get; set; }
	public bool DrawUnderUnits { get; set; }
	public double FadeInTime { get; set; }
	public bool FadeOut { get; set; }
	public int FrameIndex { get; set; }
	public int FrameIndexRandom { get; set; }
	public double HOffset { get; set; }
	public double HOffsetRandom { get; set; }
	public double HSpeed { get; set; }
	public double HSpeedRandom { get; set; }
	public object IfSpawnFailsEmitEffects { get; set; }
	public string Image { get; set; }
	public string ImageShadow { get; set; }
	public double Life { get; set; }
	public int LifeRandom { get; set; }
	public bool LiveAfterAttachedDies { get; set; }
	public bool Physics { get; set; }
	public double PhysicsGravity { get; set; }
	public string Priority { get; set; }
	public string ScaleFrom { get; set; }
	public string ScaleTo { get; set; }
	public bool Shadow { get; set; }
	public bool ShowInFog { get; set; }
	public double SpawnChance { get; set; }
	public string StripIndex { get; set; }
	public double TeamColorRatio { get; set; }
	public int Total_frames { get; set; }
	public double XOffsetAbsoluteRandom { get; set; }
	public double XOffsetRelative { get; set; }
	public int XOffsetRelativeRandom { get; set; }
	public double XSpeedAbsoluteRandom { get; set; }
	public double XSpeedRelative { get; set; }
	public double XSpeedRelativeRandom { get; set; }
	public int YOffsetAbsolute { get; set; }
	public double YOffsetAbsoluteRandom { get; set; }
	public double YOffsetRelative { get; set; }
	public int YOffsetRelativeRandom { get; set; }
	public double YSpeedAbsoluteRandom { get; set; }
	public double YSpeedRelative { get; set; }
	public double YSpeedRelativeRandom { get; set; }
}
public class HiddenActionSection
{
	public string AddAllActionCooldownsTime { get; set; }
	public string AddGlobalTeamTags { get; set; }
	public string AddResources { get; set; }
	public string AddResourcesScaledByAIHandicaps { get; set; }
	public string AddResourcesWithLogic { get; set; }
	public string AddUnitsIntoTransport { get; set; }
	public string AddWaypoint_maxTime { get; set; }
	public string AddWaypoint_position_randomOffsetFromSelf { get; set; }
	public bool AddWaypoint_prepend { get; set; }
	public string AddWaypoint_target_fromReference { get; set; }
	public bool AddWaypoint_target_mapMustBeReachable { get; set; }
	public int AddWaypoint_target_nearestUnit_maxRange { get; set; }
	public string AddWaypoint_target_nearestUnit_tagged { get; set; }
	public string AddWaypoint_target_nearestUnit_team { get; set; }
	public string AddWaypoint_target_randomUnit_tagged { get; set; }
	public string AddWaypoint_target_randomUnit_team { get; set; }
	public string AddWaypoint_triggerActionIfFailed { get; set; }
	public string AddWaypoint_type { get; set; }
	public string AlsoQueueAction { get; set; }
	public string AlsoTriggerAction { get; set; }
	public string AlsoTriggerOrQueueActionWithTarget { get; set; }
	public string AutoTrigger { get; set; }
	public string AutoTriggerOnEvent { get; set; }
	public string BuildSpeed { get; set; }
	public bool ClearActiveWaypoint { get; set; }
	public bool ClearAllWaypoints { get; set; }
	public string ConvertTo { get; set; }
	public string ConvertTo_keepCurrentFields { get; set; }
	public bool ConvertTo_keepCurrentTags { get; set; }
	public bool DeleteSelf { get; set; }
	public string Description { get; set; }
	public bool DisconnectFromParent { get; set; }
	public string DisplayType { get; set; }
	public string FireTurretXAtGround { get; set; }
	public int FireTurretXAtGround_count { get; set; }
	public string FireTurretXAtGround_withOffset { get; set; }
	public string FireTurretXAtGround_withProjectile { get; set; }
	public bool HighPriorityQueue { get; set; }
	public bool IsGuiBlinking { get; set; }
	public bool IsLocked { get; set; }
	public string Item(skipIfOverlapping=false, offsetRandomDir=360, offsetRandomX=25, offsetRandomY=25, addResources=battery { get; set; }
	public string Item(skipIfOverlapping=false, offsetRandomDir=360, offsetRandomX=25, offsetRandomY=25, addResources=engine { get; set; }
	public string Item(skipIfOverlapping=false, offsetRandomDir=360, offsetRandomX=25, offsetRandomY=25, addResources=piston { get; set; }
	public string Item(skipIfOverlapping=false, offsetRandomDir=360, offsetRandomX=25, offsetRandomY=25, addResources=plug { get; set; }
	public string Item(skipIfOverlapping=false, offsetRandomDir=360, offsetRandomX=25, offsetRandomY=25, addResources=rotor { get; set; }
	public string Item(skipIfOverlapping=false, offsetRandomDir=360, offsetRandomX=25, offsetRandomY=25, addResources=tires { get; set; }
	public string PlayAnimation { get; set; }
	public string PlaySoundAtUnit { get; set; }
	public string PlaySoundGlobally { get; set; }
	public string PlaySoundToPlayer { get; set; }
	public int Pos { get; set; }
	public string ProduceUnits { get; set; }
	public bool RefundAllQueuedItems { get; set; }
	public string RequireConditional { get; set; }
	public bool ResetCustomTimer { get; set; }
	public bool ResetToDefaultTags { get; set; }
	public string ResourceAmount { get; set; }
	public int ResourceAmount_setValue { get; set; }
	public string SendMessageTo { get; set; }
	public string SendMessageWithData { get; set; }
	public string SendMessageWithTags { get; set; }
	public int SetBuilt { get; set; }
	public string SetCustomTarget2 { get; set; }
	public string SetResourcesWithLogic { get; set; }
	public string SetUnitMemory { get; set; }
	public string SetUnitStats { get; set; }
	public object ShowMessageToAllEnemyPlayers { get; set; }
	public string ShowMessageToAllPlayers { get; set; }
	public string ShowMessageToAllPlayers_es { get; set; }
	public string ShowMessageToPlayer { get; set; }
	public string ShowMessageToPlayer_es { get; set; }
	public string ShowQuickWarLogToAllPlayers { get; set; }
	public string ShowQuickWarLogToPlayer { get; set; }
	public string ShowQuickWarLogToPlayer_es { get; set; }
	public string SpawnEffects { get; set; }
	public string SpawnUnits { get; set; }
	public string SwitchToTeam { get; set; }
	public string TakeResources { get; set; }
	public bool TakeResources_discardCollected { get; set; }
	public bool TakeResources_includeParent { get; set; }
	public int TakeResources_maxUnits { get; set; }
	public string TemporarilyAddTags { get; set; }
	public string TemporarilyRemoveTags { get; set; }
	public string Text { get; set; }
	public bool UnitShownInUIWithProgressBar { get; set; }
	public bool WhenBuilding_cannotMove { get; set; }
	public string WhenBuilding_playAnimation { get; set; }
	public int WhenBuilding_rotateTo { get; set; }
	public bool WhenBuilding_rotateTo_aimAtActionTarget { get; set; }
	public object WhenBuilding_rotateTo_rotateTurretX { get; set; }
	public bool WhenBuilding_rotateTo_waitTillRotated { get; set; }
	public string WhenBuilding_temporarilyConvertTo { get; set; }
}
public class LegSection
{
	public double Attach_x { get; set; }
	public string Attach_y { get; set; }
	public int CopyFrom { get; set; }
	public int DrawDirOffset { get; set; }
	public bool DrawFootWhenZoomedOut { get; set; }
	public bool DrawLegWhenZoomedOut { get; set; }
	public bool DrawUnderAllUnits { get; set; }
	public bool Dust_effect { get; set; }
	public int EndDirOffset { get; set; }
	public double EstimatingPositionMultiplier { get; set; }
	public bool FavourOppositeSideNeighbours { get; set; }
	public int HardLimit { get; set; }
	public double HeightSpeed { get; set; }
	public string Hidden { get; set; }
	public int HoldDisMax { get; set; }
	public int HoldDisMin { get; set; }
	public bool HoldDisMin_checkNeighbours { get; set; }
	public int HoldDisMin_maxMovingLegs { get; set; }
	public string Image_foot { get; set; }
	public object Image_foot_shadow { get; set; }
	public string Image_leg { get; set; }
	public bool LockMovement { get; set; }
	public double MoveSpeed { get; set; }
	public string MoveWarmUp { get; set; }
	public int ResetAngle { get; set; }
	public double RotateSpeed { get; set; }
	public string X { get; set; }
	public string Y { get; set; }
}
public class PlacementRuleSection
{
	public int AnyRuleInGroup { get; set; }
	public bool BlocksPlacement { get; set; }
	public string CannotPlaceMessage { get; set; }
	public string CannotPlaceMessage_es { get; set; }
	public bool CheckEachTile { get; set; }
	public bool ExcludeIncompleteBuildings { get; set; }
	public bool ExcludeNonBuildings { get; set; }
	public int MaxCount { get; set; }
	public int MinCount { get; set; }
	public int SearchDistance { get; set; }
	public string SearchTags { get; set; }
	public string SearchTeam { get; set; }
}
public class ProjectileSection
{
	public bool AlwaysVisibleInFog { get; set; }
	public string AreaDamage { get; set; }
	public bool AreaDamageNoFalloff { get; set; }
	public int AreaExpandTime { get; set; }
	public bool AreaHitAirAndLandAtSameTime { get; set; }
	public bool AreaHitUnderwaterAlways { get; set; }
	public int AreaRadius { get; set; }
	public int ArmourIgnoreAmount { get; set; }
	public bool AutoTargetingOnDeadTarget { get; set; }
	public bool Ballistic { get; set; }
	public int Ballistic_delaymove_height { get; set; }
	public int Ballistic_height { get; set; }
	public object BeamImage { get; set; }
	public object BeamImageEnd { get; set; }
	public int BeamImageOffsetRate { get; set; }
	public object BeamImageStart { get; set; }
	public double BuildingDamageMultiplier { get; set; }
	public object Color { get; set; }
	public bool ConvertHitToSourceTeam { get; set; }
	public int DeflectionPower { get; set; }
	public string DirectDamage { get; set; }
	public double DrawSize { get; set; }
	public int DrawType { get; set; }
	public bool DrawUnderUnits { get; set; }
	public object EffectOnCreate { get; set; }
	public string ExplodeEffect { get; set; }
	public object ExplodeEffectOnShield { get; set; }
	public bool ExplodeOnEndOfLife { get; set; }
	public bool FlameWeapon { get; set; }
	public int Frame { get; set; }
	public string FriendlyFire { get; set; }
	public double Gravity { get; set; }
	public bool HitSound { get; set; }
	public string Image { get; set; }
	public double InitialUnguidedSpeedHeight { get; set; }
	public bool Instant { get; set; }
	public bool InstantReuseLast { get; set; }
	public bool InstantReuseLast_alsoChangeTurretAim { get; set; }
	public bool LargeHitEffect { get; set; }
	public bool LaserEffect { get; set; }
	public int Life { get; set; }
	public bool LightCastOnGround { get; set; }
	public string LightColor { get; set; }
	public bool LightingEffect { get; set; }
	public double LightSize { get; set; }
	public bool MoveWithParent { get; set; }
	public string Mutator1_addResourcesAreaHit { get; set; }
	public int Mutator1_areaDamageMultiplier { get; set; }
	public string Mutator1_ifUnitWithoutTags { get; set; }
	public string Mutator1_ifUnitWithTags { get; set; }
	public int MutatorA_areaDamageMultiplier { get; set; }
	public string MutatorA_ifUnitWithoutTags { get; set; }
	public string MutatorE1_addResourcesDirectHit { get; set; }
	public string MutatorE1_ifUnitWithTags { get; set; }
	public object MutatorF1_addResourcesAreaHit { get; set; }
	public string MutatorF1_addResourcesDirectHit { get; set; }
	public string MutatorI1_addResourcesAreaHit { get; set; }
	public int MutatorI1_areaDamageMultiplier { get; set; }
	public string MutatorI1_ifUnitWithTags { get; set; }
	public string MutatorInD1_addResourcesAreaHit { get; set; }
	public string MutatorInD1_addResourcesDirectHit { get; set; }
	public string MutatorInD1_ifUnitWithTags { get; set; }
	public string MutatorInD2_addResourcesAreaHit { get; set; }
	public string MutatorInD2_addResourcesDirectHit { get; set; }
	public string MutatorInD2_ifUnitWithTags { get; set; }
	public int MutatorM1_areaDamageMultiplier { get; set; }
	public int MutatorM1_directDamageMultiplier { get; set; }
	public string MutatorM1_ifUnitWithTags { get; set; }
	public string MutatorP1_addResourcesAreaHit { get; set; }
	public string MutatorP1_addResourcesDirectHit { get; set; }
	public string MutatorP1_ifUnitWithTags { get; set; }
	public string MutatorW1_addResourcesAreaHit { get; set; }
	public object MutatorW1_addResourcesDirectHit { get; set; }
	public string MutatorX_changedExplodeEffect { get; set; }
	public object MutatorX_ifUnitWithoutTags { get; set; }
	public string MutatorX_ifUnitWithTags { get; set; }
	public bool NukeWeapon { get; set; }
	public int PushForce { get; set; }
	public double PushVelocity { get; set; }
	public int ShadowFrame { get; set; }
	public double ShieldDamageMultiplier { get; set; }
	public double ShieldDefectionMultiplier { get; set; }
	public bool ShouldRevealFog { get; set; }
	public string SpawnProjectilesOnCreate { get; set; }
	public string SpawnProjectilesOnEndOfLife { get; set; }
	public string SpawnProjectilesOnExplode { get; set; }
	public string SpawnUnit { get; set; }
	public double Speed { get; set; }
	public double SpeedSpread { get; set; }
	public double SweepOffsetFromTargetRadius { get; set; }
	public int SweepSpeed { get; set; }
	public string Tags { get; set; }
	public bool TargetGround { get; set; }
	public bool TargetGround_includeTargetHeight { get; set; }
	public int TargetGroundSpread { get; set; }
	public double TargetSpeed { get; set; }
	public double TargetSpeedAcceleration { get; set; }
	public double TeamColorRatio { get; set; }
	public double TeamColorRatio_sourceRatio { get; set; }
	public bool TeleportSource { get; set; }
	public string TrailEffect { get; set; }
	public double TrailEffectRate { get; set; }
	public int TurnSpeed { get; set; }
	public int UnloadUpToXUnitsFromSource { get; set; }
	public double WobbleAmplitude { get; set; }
	public string WobbleFrequency { get; set; }
}
public class ResourceSection
{
	public string DisplayName { get; set; }
	public bool Hidden { get; set; }
}
public class TemplateSection
{
	public string AddResources { get; set; }
	public bool AddTransportedUnits { get; set; }
	public string Ai_considerSameAsBuilding { get; set; }
	public bool AllowMultipleInQueue { get; set; }
	public string AlsoTriggerAction { get; set; }
	public string BuildSpeed { get; set; }
	public bool CanAttack { get; set; }
	public bool CanBeAttackedAndDamaged { get; set; }
	public bool CanPlayerCancel { get; set; }
	public string ConvertTo { get; set; }
	public string Description { get; set; }
	public string Description_es { get; set; }
	public string DescriptionAddFromUnit { get; set; }
	public string DescriptionAddUnitStats { get; set; }
	public string DisplayType { get; set; }
	public double Height { get; set; }
	public bool HighPriorityQueue { get; set; }
	public string IsActive { get; set; }
	public string IsLocked { get; set; }
	public string IsLockedMessage { get; set; }
	public string IsLockedMessage_es { get; set; }
	public bool IsUnselectable { get; set; }
	public string IsVisible { get; set; }
	public bool KeepAliveWhenParentDies { get; set; }
	public bool LockRotation { get; set; }
	public object PlaySoundToPlayer { get; set; }
	public double Pos { get; set; }
	public string ProduceUnits { get; set; }
	public bool RotateWithParent { get; set; }
	public int SetBuilt { get; set; }
	public bool SetDrawLayerOnBottom { get; set; }
	public string Text { get; set; }
	public string Text_es { get; set; }
	public string TextAddUnitName { get; set; }
	public string UnitShownInUI { get; set; }
	public bool UnloadInCurrentPosition { get; set; }
	public bool WhenBuilding_cannotMove { get; set; }
}
public class TurretSection
{
	public int AimOffsetSpread { get; set; }
	public string AltProjectile { get; set; }
	public string AltProjectileCondition { get; set; }
	public string AttachedTo { get; set; }
	public int BarrelHeight { get; set; }
	public int BarrelOffsetX_onOddShots { get; set; }
	public double BarrelX { get; set; }
	public int BarrelY { get; set; }
	public bool CanAttack { get; set; }
	public string CanAttackCondition { get; set; }
	public bool CanAttackFlyingUnits { get; set; }
	public bool CanAttackLandUnits { get; set; }
	public int CanAttackMaxAngle { get; set; }
	public bool CanAttackNotTouchingWaterUnits { get; set; }
	public bool CanAttackUnderwaterUnits { get; set; }
	public string CanOnlyAttackUnitsWithoutTags { get; set; }
	public bool CanShoot { get; set; }
	public string ChargeEffectImage { get; set; }
	public string CopyFrom { get; set; }
	public string Delay { get; set; }
	public double EnergyUsage { get; set; }
	public int IdleDir { get; set; }
	public int IdleDirReversing { get; set; }
	public double IdleSpin { get; set; }
	public int IdleSweepAddRandomAngle { get; set; }
	public int IdleSweepAddRandomDelay { get; set; }
	public int IdleSweepAngle { get; set; }
	public string IdleSweepCondition { get; set; }
	public int IdleSweepDelay { get; set; }
	public double IdleSweepSpeed { get; set; }
	public string Image { get; set; }
	public bool Image_applyTeamColors { get; set; }
	public int Image_drawOffsetY { get; set; }
	public int InterceptProjectiles_andOverHeight { get; set; }
	public int InterceptProjectiles_andTargetingGroundUnderDistance { get; set; }
	public int InterceptProjectiles_andUnderDistance { get; set; }
	public string InterceptProjectiles_withTags { get; set; }
	public string Invisible { get; set; }
	public bool IsMainNanoTurret { get; set; }
	public double LaserDefenceEnergyUse { get; set; }
	public int LimitingAngle { get; set; }
	public int LimitingMinRange { get; set; }
	public string LimitingRange { get; set; }
	public string LinkDelayWithTurret { get; set; }
	public string OnShoot_freezeBodyMovementFor { get; set; }
	public string OnShoot_playAnimation { get; set; }
	public string OnShoot_triggerActions { get; set; }
	public string Projectile { get; set; }
	public double RecoilOffset { get; set; }
	public double RecoilOutTime { get; set; }
	public int RecoilReturnTime { get; set; }
	public string ResourceUsage { get; set; }
	public string Shoot_flame { get; set; }
	public string Shoot_light { get; set; }
	public string Shoot_sound { get; set; }
	public double Shoot_sound_vol { get; set; }
	public bool ShouldResetTurret { get; set; }
	public bool ShowRangeUIGuide { get; set; }
	public double Size { get; set; }
	public bool Slave { get; set; }
	public double TurnSpeed { get; set; }
	public double TurnSpeedAcceleration { get; set; }
	public double TurnSpeedDeceleration { get; set; }
	public string Warmup { get; set; }
	public double WarmupCallDownRate { get; set; }
	public bool WarmupNoReset { get; set; }
	public int WarmupShootDelayTransfer { get; set; }
	public object WarmupStartEffect { get; set; }
	public double X { get; set; }
	public double Y { get; set; }
}
public class AiSection
{
	public double Ai_upgradePriority { get; set; }
	public string AiTags { get; set; }
	public double BuildPriority { get; set; }
	public bool DisableUse { get; set; }
	public bool LowPriorityTargetForOtherUnits { get; set; }
	public int MaxEachBase { get; set; }
	public int MaxGlobal { get; set; }
	public double NoneGlobalExtraPriority { get; set; }
	public double NoneInBaseExtraPriority { get; set; }
	public bool NotPassivelyTargetedByOtherUnits { get; set; }
	public string OnlyUseAsHarvester_ifBaseHasUnitTagged { get; set; }
	public int RecommendedInEachBaseNum { get; set; }
	public double RecommendedInEachBasePriorityIfUnmet { get; set; }
	public string UpgradedFrom { get; set; }
	public bool UseAsAttacker { get; set; }
	public bool UseAsBuilder { get; set; }
	public bool UseAsHarvester { get; set; }
	public bool UseAsTransport { get; set; }
	public int WhenUsingAsHarvester_recommendedGlobal { get; set; }
	public int WhenUsingAsHarvester_recommendedInEachBase { get; set; }
}
public class AttackSection
{
	public double AimOffsetSpread { get; set; }
	public string AttackMovement { get; set; }
	public bool CanAttack { get; set; }
	public bool CanAttackFlyingUnits { get; set; }
	public string CanAttackLandUnits { get; set; }
	public bool CanAttackNotTouchingWaterUnits { get; set; }
	public bool CanAttackUnderwaterUnits { get; set; }
	public string CanOnlyAttackUnitsWithoutTags { get; set; }
	public string CanOnlyAttackUnitsWithTags { get; set; }
	public bool DieOnAttack { get; set; }
	public bool DisablePassiveTargeting { get; set; }
	public bool IsFixedFiring { get; set; }
	public bool IsMelee { get; set; }
	public string MaxAttackRange { get; set; }
	public int MeleeEngangementDistance { get; set; }
	public string ShootDelay { get; set; }
	public bool ShowRangeUIGuide { get; set; }
	public bool TurretMultiTargeting { get; set; }
	public bool TurretRotateWithBody { get; set; }
	public double TurretSize { get; set; }
	public double TurretTurnSpeed { get; set; }
}
public class CoreSection
{
	public string Action_1_autoTrigger { get; set; }
	public string Action_1_buildSpeed { get; set; }
	public string Action_1_convertTo { get; set; }
	public string Action_1_description { get; set; }
	public string Action_1_displayType { get; set; }
	public object Action_1_iconExtraColor { get; set; }
	public object Action_1_iconExtraImage { get; set; }
	public string Action_1_isActive { get; set; }
	public bool Action_1_isVisible { get; set; }
	public double Action_1_pos { get; set; }
	public int Action_1_price { get; set; }
	public string Action_1_text { get; set; }
	public bool Action_1_whenBuilding_cannotMove { get; set; }
	public string Action_2_buildSpeed { get; set; }
	public string Action_2_convertTo { get; set; }
	public string Action_2_description { get; set; }
	public string Action_2_displayType { get; set; }
	public double Action_2_pos { get; set; }
	public int Action_2_price { get; set; }
	public string Action_2_text { get; set; }
	public bool Action_2_whenBuilding_cannotMove { get; set; }
	public string AltNames { get; set; }
	public int Armour { get; set; }
	public int ArmourMinDamageToKeep { get; set; }
	public bool AutoRepair { get; set; }
	public string AutoTriggerCooldownTime { get; set; }
	public bool AvailableInDemo { get; set; }
	public string BorrowResourcesWhileAlive { get; set; }
	public string BorrowResourcesWhileBuilt { get; set; }
	public int BuildingSelectionOffset { get; set; }
	public int BuildingToFootprintOffsetX { get; set; }
	public int BuildingToFootprintOffsetY { get; set; }
	public string BuildSpeed { get; set; }
	public string BuiltFrom_1_name { get; set; }
	public string BuiltFrom_1_pos { get; set; }
	public string BuiltFrom_2_name { get; set; }
	public double BuiltFrom_2_pos { get; set; }
	public string BuiltFrom_3_name { get; set; }
	public double BuiltFrom_3_pos { get; set; }
	public string BuiltFrom_4_name { get; set; }
	public double BuiltFrom_4_pos { get; set; }
	public string CanBuild_0_name { get; set; }
	public int CanBuild_0_pos { get; set; }
	public bool CanBuild_1_forceNano { get; set; }
	public string CanBuild_1_name { get; set; }
	public double CanBuild_1_pos { get; set; }
	public bool CanBuild_10_forceNano { get; set; }
	public string CanBuild_10_name { get; set; }
	public double CanBuild_10_pos { get; set; }
	public bool CanBuild_11_forceNano { get; set; }
	public string CanBuild_11_name { get; set; }
	public double CanBuild_11_pos { get; set; }
	public bool CanBuild_12_forceNano { get; set; }
	public string CanBuild_12_name { get; set; }
	public double CanBuild_12_pos { get; set; }
	public string CanBuild_13_name { get; set; }
	public int CanBuild_13_pos { get; set; }
	public string CanBuild_14_name { get; set; }
	public int CanBuild_14_pos { get; set; }
	public string CanBuild_15_name { get; set; }
	public double CanBuild_15_pos { get; set; }
	public string CanBuild_16_name { get; set; }
	public int CanBuild_16_pos { get; set; }
	public string CanBuild_17_name { get; set; }
	public int CanBuild_17_pos { get; set; }
	public string CanBuild_18_name { get; set; }
	public int CanBuild_18_pos { get; set; }
	public string CanBuild_2_name { get; set; }
	public int CanBuild_2_pos { get; set; }
	public bool CanBuild_3_forceNano { get; set; }
	public string CanBuild_3_name { get; set; }
	public int CanBuild_3_pos { get; set; }
	public bool CanBuild_4_forceNano { get; set; }
	public string CanBuild_4_name { get; set; }
	public int CanBuild_4_pos { get; set; }
	public int CanBuild_4_tech { get; set; }
	public bool CanBuild_5_forceNano { get; set; }
	public string CanBuild_5_name { get; set; }
	public int CanBuild_5_pos { get; set; }
	public int CanBuild_5_tech { get; set; }
	public bool CanBuild_6_forceNano { get; set; }
	public string CanBuild_6_name { get; set; }
	public int CanBuild_6_pos { get; set; }
	public int CanBuild_6_tech { get; set; }
	public bool CanBuild_7_forceNano { get; set; }
	public string CanBuild_7_name { get; set; }
	public int CanBuild_7_pos { get; set; }
	public bool CanBuild_8_forceNano { get; set; }
	public string CanBuild_8_name { get; set; }
	public int CanBuild_8_pos { get; set; }
	public bool CanBuild_9_forceNano { get; set; }
	public string CanBuild_9_name { get; set; }
	public int CanBuild_9_pos { get; set; }
	public bool CanNotBeDamaged { get; set; }
	public bool CanNotBeDirectlyAttacked { get; set; }
	public bool CanNotBeGivenOrdersByPlayer { get; set; }
	public string CanOnlyBeAttackedByUnitsWithTags { get; set; }
	public bool CanReclaimResources { get; set; }
	public int CanReclaimResourcesNextSearchRange { get; set; }
	public string CanReclaimResourcesOnlyWithTags { get; set; }
	public bool CanRepairBuildings { get; set; }
	public bool CanRepairUnits { get; set; }
	public string CanRepairUnitsOnlyWithTags { get; set; }
	public string Class { get; set; }
	public string ConstructionFootprint { get; set; }
	public bool ConvertToNeutralIfNotTransporting { get; set; }
	public string CopyFrom { get; set; }
	public bool CreateNeutral { get; set; }
	public bool CreateOnAggressiveTeam { get; set; }
	public bool DieOnConstruct { get; set; }
	public bool DieOnZeroEnergy { get; set; }
	public bool DisableAllUnitCollisions { get; set; }
	public bool DisableDeathOnZeroHp { get; set; }
	public string DisplayDescription { get; set; }
	public string DisplayDescription_de { get; set; }
	public string DisplayDescription_es { get; set; }
	public string DisplayDescription_fr { get; set; }
	public string DisplayDescription_it { get; set; }
	public string DisplayDescription_ja { get; set; }
	public string DisplayDescription_nl { get; set; }
	public string DisplayDescription_pl { get; set; }
	public string DisplayDescription_pt { get; set; }
	public string DisplayDescription_ru { get; set; }
	public string DisplayDescription_tr { get; set; }
	public string DisplayDescription_uk { get; set; }
	public string DisplayDescription_zh { get; set; }
	public string DisplayDescription_zh_cn { get; set; }
	public string DisplayLocaleKey { get; set; }
	public int DisplayRadius { get; set; }
	public string DisplayText { get; set; }
	public string DisplayText_de { get; set; }
	public string DisplayText_es { get; set; }
	public string DisplayText_fr { get; set; }
	public string DisplayText_it { get; set; }
	public string DisplayText_ja { get; set; }
	public string DisplayText_nl { get; set; }
	public string DisplayText_pl { get; set; }
	public string DisplayText_pt { get; set; }
	public string DisplayText_ru { get; set; }
	public string DisplayText_tr { get; set; }
	public string DisplayText_uk { get; set; }
	public string DisplayText_zh { get; set; }
	public string DisplayText_zh_cn { get; set; }
	public bool Dont_load { get; set; }
	public string EffectOnDeath { get; set; }
	public object EffectOnDeathGroundCollosion { get; set; }
	public double EnergyMax { get; set; }
	public bool EnergyNeedsToRechargeToFull { get; set; }
	public double EnergyRegen { get; set; }
	public double EnergyRegenWhenRecharging { get; set; }
	public int EnergyStartingPercentage { get; set; }
	public int Exit_dirOffset { get; set; }
	public int Exit_heightOffset { get; set; }
	public int Exit_moveAwayAmount { get; set; }
	public int Exit_x { get; set; }
	public double Exit_y { get; set; }
	public bool Experimental { get; set; }
	public bool ExplodeOnDeath { get; set; }
	public bool ExplodeOnDeathGroundCollosion { get; set; }
	public string ExplodeTypeOnDeath { get; set; }
	public string FireTurretXAtSelfOnDeath { get; set; }
	public int FogOfWarSightRange { get; set; }
	public int FogOfWarSightRangeWhileNotBuilt { get; set; }
	public string Footprint { get; set; }
	public int Generation_credits { get; set; }
	public int Generation_delay { get; set; }
	public string Generation_resources { get; set; }
	public bool HideScorchMark { get; set; }
	public bool IgnoreInUnitCapCalculation { get; set; }
	public bool IsBio { get; set; }
	public bool IsBug { get; set; }
	public bool IsBuilder { get; set; }
	public bool IsBuilding { get; set; }
	public bool IsLocked { get; set; }
	public bool IsLockedIfGameModeNoNuke { get; set; }
	public bool IsPickableStartingUnit { get; set; }
	public bool IsUnrepairableUnit { get; set; }
	public bool IsUnselectable { get; set; }
	public bool IsUnselectableAsTarget { get; set; }
	public int Mass { get; set; }
	public int MaxHp { get; set; }
	public int MaxShield { get; set; }
	public int MaxTransportingUnits { get; set; }
	public string Name { get; set; }
	public double NanoBuildSpeed { get; set; }
	public double NanoFactorySpeed { get; set; }
	public int NanoRange { get; set; }
	public int NanoRangeForReclaim { get; set; }
	public bool NanoRangeForReclaimIsMelee { get; set; }
	public int NanoRangeForRepair { get; set; }
	public bool NanoRangeForRepairIsMelee { get; set; }
	public double NanoRepairSpeed { get; set; }
	public bool NukeOnDeath { get; set; }
	public int NukeOnDeathDamage { get; set; }
	public bool NukeOnDeathDisableWhenNoNuke { get; set; }
	public int NukeOnDeathRange { get; set; }
	public int NumBitsOnDeath { get; set; }
	public string OnNewMapSpawn { get; set; }
	public string OverrideAndReplace { get; set; }
	public bool PlaceOnlyOnResPool { get; set; }
	public string Price { get; set; }
	public int Radius { get; set; }
	public string ReclaimPrice { get; set; }
	public int ResourceMaxConcurrentReclaimingThis { get; set; }
	public double ResourceRate { get; set; }
	public string SelfBuildRate { get; set; }
	public double SelfRegenRate { get; set; }
	public int ShieldDeflectionDisplayRate { get; set; }
	public bool ShieldDisplayOnlyDeflection { get; set; }
	public double ShieldRegen { get; set; }
	public int ShieldRenderRadius { get; set; }
	public string ShowActionsWithMixedSelectionIfOtherUnitsHaveTag { get; set; }
	public bool ShowInEditor { get; set; }
	public bool ShowOnMinimap { get; set; }
	public bool ShowOnMinimapToEnemies { get; set; }
	public string SimilarResourcesHaveTag { get; set; }
	public int SoftCollisionOnAll { get; set; }
	public string SoundOnDeath { get; set; }
	public bool StartFallingWhenStartingUnit { get; set; }
	public bool StartShieldAtZero { get; set; }
	public bool StayNeutral { get; set; }
	public object SwitchPriceWithStreamingCost { get; set; }
	public string Tags { get; set; }
	public int TechLevel { get; set; }
	public int TransportSlotsNeeded { get; set; }
	public bool TransportUnitsAddUnloadOption { get; set; }
	public bool TransportUnitsBlockOtherTransports { get; set; }
	public string TransportUnitsCanUnloadUnits { get; set; }
	public bool TransportUnitsEachUnitAlwaysUsesSingleSlot { get; set; }
	public string TransportUnitsKeepBuiltUnits { get; set; }
	public bool TransportUnitsKillOnDeath { get; set; }
	public bool TransportUnitsOnTeamChangeKeepCurrentTeam { get; set; }
	public string TransportUnitsRequireMovementType { get; set; }
	public string TransportUnitsRequireTag { get; set; }
	public string TransportUnitsUnloadDelayBetweenEachUnit { get; set; }
	public string UnitsSpawnedOnDeath { get; set; }
	public bool UnitsSpawnedOnDeath_setToTeamOfLastAttacker { get; set; }
	public bool WhileNeutralConvertToTransportedTeam { get; set; }
	public bool WhileNeutralTransportAnyTeam { get; set; }
}
public class GraphicsSection
{
	public int Animation_attack_end { get; set; }
	public bool Animation_attack_pingPong { get; set; }
	public double Animation_attack_scale_end { get; set; }
	public int Animation_attack_scale_start { get; set; }
	public int Animation_attack_speed { get; set; }
	public int Animation_attack_start { get; set; }
	public int Animation_direction_starting { get; set; }
	public int Animation_direction_strideX { get; set; }
	public int Animation_direction_strideY { get; set; }
	public int Animation_direction_units { get; set; }
	public string Animation_idle_blendIn { get; set; }
	public int Animation_idle_end { get; set; }
	public bool Animation_idle_pingPong { get; set; }
	public double Animation_idle_scale_end { get; set; }
	public double Animation_idle_scale_start { get; set; }
	public double Animation_idle_speed { get; set; }
	public int Animation_idle_start { get; set; }
	public int Animation_moving_end { get; set; }
	public bool Animation_moving_pingPong { get; set; }
	public double Animation_moving_scale_end { get; set; }
	public double Animation_moving_scale_start { get; set; }
	public double Animation_moving_speed { get; set; }
	public int Animation_moving_start { get; set; }
	public bool DisableLowHpFire { get; set; }
	public bool DisableLowHpSmoke { get; set; }
	public string DrawLayer { get; set; }
	public bool DustEffect { get; set; }
	public int Frame_height { get; set; }
	public int Frame_width { get; set; }
	public string Icon_zoomed_out { get; set; }
	public bool Icon_zoomed_out_neverShow { get; set; }
	public string Image { get; set; }
	public string Image_back { get; set; }
	public bool Image_back_always_use_full_image { get; set; }
	public int Image_offsetY { get; set; }
	public string Image_shadow { get; set; }
	public string Image_shield { get; set; }
	public string Image_turret { get; set; }
	public string Image_wreak { get; set; }
	public double ImageScale { get; set; }
	public bool IsVisible { get; set; }
	public bool IsVisibleToEnemies { get; set; }
	public bool Lock_body_rotation_with_main_turret { get; set; }
	public bool Lock_leg_rotation_with_main_turret { get; set; }
	public bool Lock_shadow_rotation_with_main_turret { get; set; }
	public object MovementEffect { get; set; }
	public int MovementEffectRate { get; set; }
	public object MovementEffectReverse { get; set; }
	public bool MovementEffectReverseFlipEffects { get; set; }
	public object ReclaimEffect { get; set; }
	public object ReclaimEffectAtTarget { get; set; }
	public int ReclaimEffectRate { get; set; }
	public object RepairEffect { get; set; }
	public int RepairEffectRate { get; set; }
	public bool Rotate_with_direction { get; set; }
	public int ScaleImagesTo { get; set; }
	public int ScaleTurretImagesTo { get; set; }
	public double ShadowOffsetX { get; set; }
	public double ShadowOffsetY { get; set; }
	public bool ShowEnergyBar { get; set; }
	public bool ShowHealthBar { get; set; }
	public string ShowQueueBar { get; set; }
	public bool ShowShieldBar { get; set; }
	public bool ShowTransportBar { get; set; }
	public bool SplastEffect { get; set; }
	public string TeamColoringMode { get; set; }
	public string TeamColorsOnTurret { get; set; }
	public int Total_frames { get; set; }
	public double TurretImageScale { get; set; }
	public int WhenBeingBuiltMakeTransparentTill { get; set; }
}
public class HiddeAction_PassiveHealingSection
{
}
public class MovementSection
{
	public double FallingAcceleration { get; set; }
	public double HeightChangeRate { get; set; }
	public bool IgnoreMoveOrders { get; set; }
	public bool JoinsGroupFormations { get; set; }
	public string LandOnGround { get; set; }
	public double MaxTurnSpeed { get; set; }
	public double MoveAccelerationSpeed { get; set; }
	public double MoveDecelerationSpeed { get; set; }
	public bool MoveIgnoringBody { get; set; }
	public string MovementType { get; set; }
	public int MoveSlidingDir { get; set; }
	public bool MoveSlidingMode { get; set; }
	public double MoveSpeed { get; set; }
	public double ReverseSpeedPercentage { get; set; }
	public bool SlowDeathFall { get; set; }
	public bool SlowDeathFallSmoke { get; set; }
	public int StartingHeightOffset { get; set; }
	public double TargetHeight { get; set; }
	public string TargetHeightDrift { get; set; }
	public double TurnAcceleration { get; set; }
}
